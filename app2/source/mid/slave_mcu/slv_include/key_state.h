#ifndef  __key_state_h__
#define  __key_state_h__












#define    key_filt_time    ((u8)10)         //按键操作抖动过滤时间值10毫秒
#define    key_long_time    ((u16)1000)      //按键长按操作时间值1000毫秒
#define    key_free_data    ((u16)0x000f)    //无按键按下的状态值

#define    state_filt_time  ((u8)100)        //状态抖动过滤时间值100毫秒




//*****************************************************************************
//*****************************************************************************
//-----------           需要外部函数及变量支持                -----------------
//-----------------------------------------------------------------------------
///#define    key_state_sys_time    jiffies    //系统时钟，单位为1毫秒

#define    key_read()      key_read_data()
//获取按键状态
//调用即可返回按键的键值编码









//*****************************************************************************
//*****************************************************************************
//-------------------           数据类型定义               --------------------
//-----------------------------------------------------------------------------


typedef struct
{
	u16     t;       //计时器    单位为1毫秒
	u8     step;    //按键检测步骤
	bool  press;   //按键已经确定按下  TRUE表示已经有按键按下  FALSE表示没有

	u16  long_t;    //长按计时器
	u16  last;      //上次按下的按键状态值
}
key_proc_struct;       //按键扫描处理结构体


typedef struct
{
	bool  active;  //TRUE表示有新的按键操作有待处理    FALSE表示操作处理完毕
	//读取后需要手动清零，否则下次更新键值不能立即知道
	bool  lg;       //TRUE表示长按              FALSE表示短按

	u16   dat;        //按下按键的键值
}
key_struct;    //按键操作结果结构体


typedef struct
{
    u8  last;       	//最近一次有效的状态
    u8  filt_tim;  		//扫描过滤时间值	
	u16   tim;        	//状态稳定时间值计数器
}
state_struct;






//*****************************************************************************
//*****************************************************************************
//-----------                 供给外部函数调用                -----------------
//-----------------------------------------------------------------------------

extern void key_state_scan_init(void);
extern key_struct key_scan(void);
extern u8 state_scan(state_struct *sta, u8 curr, u16 tim_max);








#endif
//*****************************************************************************
//*****************************************************************************




