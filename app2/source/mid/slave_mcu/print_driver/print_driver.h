//*****************************************************************************//
//*****************************************************************************//
//
//  CKP  2015-07-15  优化底层驱动
//
//*****************************************************************************//
//*****************************************************************************//
#ifndef  __print_driver_h__
#define  __print_driver_h__

#include "ckp_mcu_file.h"

#define  print_line_range_max        ((uchar)48)    //一行打印范围
#define  print_col_range_max         ((uchar)16)    //一列打印范围


//*****************************************************************************
//*****************************************************************************
//-----------                    宏定义设置                   -----------------
//-----------                    条件编译开关                 -----------------
//-----------------------------------------------------------------------------

//#define    print_speed       ((uint)500)        //新版本速度加快，颜色会变淡一些
//#define    moto_print_step_time_volue  ((uchar)(5000/print_speed))  //电机打印单步时间计数,该项参数不得随意设置

#define    moto_print_step_cyc_volue   ((uchar)4)      //电机打印一行的步进数
#define    moto_noload_step_cyc_volue  ((uchar)100)   //电机走纸步进数

#define    print_task_cnt_cycle         ((uchar)16)    //打印任务周期

//#define    print_pixel_amp_en      //像素点宽度放大两倍使能

//******************************************************//
//******************************************************//




//*****************************************************************************
//*****************************************************************************
//-----------           需要外部函数及变量支持                -----------------
//-----------------------------------------------------------------------------

typedef struct
{
	void (*prt_mb_set)(bit_enum s);    //步进电机B端端口控制   TRUE高电平  FALSE低电平
	void (*prt_mnb_set)(bit_enum s);   //步进电机NB端端口控制  TRUE高电平  FALSE低电平
	void (*prt_ma_set)(bit_enum s);    //步进电机A端端口控制   TRUE高电平  FALSE低电平
	void (*prt_mna_set)(bit_enum s);   //步进电机NA端端口控制  TRUE高电平  FALSE低电平

	void (*prt_di_set)(bit_enum s);    //打印机di端口控制    TRUE高电平  FALSE低电平
	void (*prt_clk_set)(bit_enum s);   //打印机clk端口控制   TRUE高电平  FALSE低电平
	void (*prt_lat_set)(bit_enum s);   //打印机lat端口控制   TRUE高电平  FALSE低电平

	void (*prt_heat_set)(bit_enum s);  //打印机加热端口控制   TRUE使能   FALSE禁止 (外部控制为高电平即可使能)

	void (*prt_font)(uint addr, uchar *dst);
	//参数addr指待查的字符的地址(编码)
	//参数*dst是指定查找到点阵信息后将结果放到该缓冲器中
}
pt487fb_driver_need_struct;






//*****************************************************************************
//*****************************************************************************
//-------------------           数据类型定义               --------------------
//-----------------------------------------------------------------------------
typedef struct
{
	uchar  step;     //电机驱动步骤
	uint   cnt;      //计数器，以一个时间精度为单位

	uint   step_tim;      //单步时间长度，以一个时间精度为单位
	ulong  step_cycle;    //单行点阵像素点电机需要走动的步进数，
}
moto_driv_para_struct;     //电机驱动参数结构体，以单行点阵像素点为单位


typedef struct
{
	uchar  pixel_buff[print_col_range_max][print_line_range_max];      //点阵缓冲区

	uchar  cnt;             //打印一行文字所需要的打印周期计数
	bit_enum  paper_move_flag;   //打印机走纸请求
}
print_task_para_struct;   //打印任务参数结构体，以整行字符为单位









//*****************************************************************************
//*****************************************************************************
//-----------                 供给外部函数调用                -----------------
//-----------------------------------------------------------------------------


extern void print_data_init(pt487fb_driver_need_struct src);
//参数初始化

extern void print_driver_init(uint sp);
//驱动初始化
//参数SP为打印速度设置    取值范围(50-1200)，最好不要用临界值

extern bit_enum print_read_state(void);
//读取打印状态
//函数返回值      TRUE表示忙状态      FALSE表示空闲状态
//若打印机正在忙，则不会响应其他命令


extern bit_enum print_base_task_hdl(void);
//打印任务调度处理
//开始打印时，调用该函数，该函数的调用频率为5KHz，周期为200微秒
//用定时器中断来做，精确控制步进电机
//函数返回值    TRUE表示正在运行    FALSE表示该次运行周期结束

extern bit_enum print_move_paper_config(void);  //没有使用到
//配置打印机走纸
//函数返回值返回设置走纸任务是否成功  TRUE设置成成功  FALSE设置失败(忙状态造成)

extern bit_enum print_one_line(uchar x, uint lgth, uchar *s_buff, uint *cnt);
//打印一行字符
//参数x为行打印的起始地址，取值范围为0-47，总打印的范围单行为48个字符或24个汉字
//参数lgth为待打印字符计数
//参数s_buff为待打印的字符编码
//参数cnt返回还剩下待打印的字节个数
//函数返回值返回本次操作命令是否被执行  TRUE成功  FALSE失败(忙状态造成)
//
//注意:本行实际打印的字节数可以是因为回车换行符或者是超过了打印范围
//注意:换行必须同时出现回车换行符，否则视为字符处理



#endif




